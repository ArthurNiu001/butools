butools.map.RandomMMAP
======================

.. currentmodule:: butools.map

.. np:function:: RandomMMAP

    .. list-table::
        :widths: 25 150

        * - Matlab:
          - :code:`D = RandomMMAP(order, types, mean, zeroEntries, maxTrials, prec)`
        * - Mathematica:
          - :code:`D = RandomMMAP[order, types, mean, zeroEntries, maxTrials, prec]`
        * - Python/Numpy:
          - :code:`D = RandomMMAP(order, types, mean, zeroEntries, maxTrials, prec)`

    Returns a random Markovian arrival process with given mean 
    value.

    Parameters
    ----------
    order : int
        The size of the MAP
    types : int
        The number of different arrival types
    mean : double, optional
        The mean inter-arrival times of the MMAP
    zeroEntries : int, optional
        The number of zero entries in the D0 and D1 matrices
    maxTrials : int, optional
        The maximum number of trials to find a proper MMAP 
        (that has an irreducible phase process and none of 
        its parameters is all-zero)
    prec : double, optional
        Numerical precision for checking the irreducibility.
        The default value is 1e-14.

    Returns
    -------
    D : list/cell of matrices of shape(M,M), length(types+1)
        The D0...Dtypes matrices of the MMAP 

    Examples
    ========
    For Matlab:

    >>> D = RandomMMAP(4,3,1.62,10);
    >>> disp(D{1});
         -0.87817     0.062823     0.084736     0.065897
         0.091703     -0.76824     0.084088    0.0043968
         0.046976     0.011212     -0.73518            0
        0.0044747      0.10301      0.10419      -0.7776
    >>> disp(D{2});
          0.06974      0.10197     0.014163      0.06567
          0.10359     0.072645     0.060672     0.046658
                0     0.092982            0     0.078496
         0.098123     0.064798            0      0.10907
    >>> disp(D{3});
          0.11055     0.013521      0.11244     0.005053
         0.082897            0      0.01118     0.072551
         0.025674      0.11295      0.09019      0.10119
                0     0.039442            0     0.083118
    >>> disp(D{4});
         0.080088     0.026043     0.045229     0.020247
         0.032178     0.041563     0.008544     0.055573
         0.019302     0.050709            0       0.1055
                0      0.10065            0     0.070722
    >>> m = MarginalMomentsFromMMAP(D,1);
    >>> disp(m);
             1.62

    For Mathematica:

    >>> D = RandomMMAP[4,3,1.62,10];
    >>> Print[D[[1]]];
    {{-0.437295799139103, 0.003338754417580839, 0.1415641573902845, 0.},
     {0.13874453128014122, -1.453383261788896, 0.08830566821786341, 0.13347200470769885},
     {0.026397550108518308, 0.08259215414065181, -1.1530486916510667, 0.16563511334375444},
     {0.05009359207333795, 0.04454176637731126, 0.023976446303573703, -0.9949578628373476}}
    >>> Print[D[[2]]];
    {{0.09187225694748774, 0., 0., 0.06295420798668812},
     {0.04755452259888749, 0.07476640128155324, 0.09049254879350689, 0.08310311437882813},
     {0.06563139099076135, 0.02305879569093747, 0.07732944512589102, 0.07528493298707305},
     {0.11017315736807261, 0.07649114218185626, 0., 0.1429046091024359}}
    >>> Print[D[[3]]];
    {{0., 0., 0., 0.},
     {0.13525793934490532, 0.1259888621470111, 0.11826980705600605, 0.031435769196259566},
     {0.06747058296246983, 0.07639101462714645, 0.04384916379081349, 0.09912670110087209},
     {0.08550816142494111, 0.09644949690992638, 0.1500251788792094, 0.11127398134328904}}
    >>> Print[D[[4]]];
    {{0.0812019035015118, 0.049057297741971276, 0.007307221153578756, 0.},
     {0.019872717487239785, 0.15959567298258204, 0.04706438838285499, 0.1594593139335582},
     {0.01343680664045834, 0.15483013690779301, 0.1316494518826231, 0.05036545135130296},
     {0.02436029981931885, 0.04889497431103888, 0., 0.030265056743036027}}
    >>> m = MarginalMomentsFromMMAP[D,1][[1]];
    >>> Print[m];
    1.62

    For Python/Numpy:

    >>> D = RandomMMAP(4,3,1.62,10)
    >>> print(D[0])
    [[-1.43065  0.0365   0.0986   0.07204]
     [ 0.05873 -1.05339  0.04712  0.15256]
     [ 0.13173  0.06613 -1.06262  0.08123]
     [ 0.       0.       0.15889 -0.49418]]
    >>> print(D[1])
    [[ 0.10965  0.0871   0.07968  0.09757]
     [ 0.0422   0.07341  0.14393  0.04916]
     [ 0.06419  0.04432  0.04832  0.04497]
     [ 0.       0.       0.05647  0.     ]]
    >>> print(D[2])
    [[ 0.08451  0.10921  0.00595  0.13313]
     [ 0.01176  0.01499  0.02215  0.15746]
     [ 0.09727  0.10813  0.03394  0.01303]
     [ 0.       0.       0.12291  0.04148]]
    >>> print(D[3])
    [[ 0.07496  0.15214  0.14958  0.14002]
     [ 0.00067  0.03011  0.15207  0.09708]
     [ 0.15404  0.03823  0.06455  0.07252]
     [ 0.       0.       0.       0.11443]]
    >>> m = MarginalMomentsFromMMAP(D,1)[0]
    >>> print(m)
    1.62

