butools.map.RandomMMAP
======================

.. currentmodule:: butools.map

.. np:function:: RandomMMAP

    .. list-table::
        :widths: 25 150

        * - Matlab:
          - :code:`D = RandomMMAP(order, types, mean, zeroEntries, maxTrials, prec)`
        * - Mathematica:
          - :code:`D = RandomMMAP[order, types, mean, zeroEntries, maxTrials, prec]`
        * - Python/Numpy:
          - :code:`D = RandomMMAP(order, types, mean, zeroEntries, maxTrials, prec)`

    Returns a random Markovian arrival process with given mean 
    value.

    Parameters
    ----------
    order : int
        The size of the MAP
    types : int
        The number of different arrival types
    mean : double, optional
        The mean inter-arrival times of the MMAP
    zeroEntries : int, optional
        The number of zero entries in the D0 and D1 matrices
    maxTrials : int, optional
        The maximum number of trials to find a proper MMAP 
        (that has an irreducible phase process and none of 
        its parameters is all-zero)
    prec : double, optional
        Numerical precision for checking the irreducibility.
        The default value is 1e-14.

    Returns
    -------
    D : list/cell of matrices of shape(M,M), length(types+1)
        The D0...Dtypes matrices of the MMAP 

    Examples
    ========
    For Matlab:

    >>> D = RandomMMAP(4,3,1.62,10);
    >>> disp(D{1});
         -0.72868     0.055273     0.047423     0.056244
          0.06225      -0.9218       0.1245     0.049296
        0.0096644     0.047473     -0.69047            0
                0     0.017848     0.083616     -0.67387
    >>> disp(D{2});
          0.13657     0.043912      0.01127            0
         0.083583     0.011669     0.051336    0.0010036
         0.037478      0.13401     0.067069     0.012741
         0.029581            0     0.017364       0.1105
    >>> disp(D{3});
         0.017337    0.0047739    0.0044317     0.095876
          0.13834            0      0.13831            0
         0.028862      0.13141     0.059526            0
         0.012958            0     0.019903     0.061803
    >>> disp(D{4});
         0.017333      0.13649            0      0.10174
         0.034398      0.08707     0.066363     0.073684
                0      0.01396      0.10383     0.044444
         0.030616     0.098475     0.095819     0.095387
    >>> m = MarginalMomentsFromMMAP(D,1);
    >>> disp(m);
             1.62

    For Mathematica:

    >>> D = RandomMMAP[4,3,1.62,10];
    >>> Print[D[[1]]];
    {{-0.6045222155916562, 0., 0., 0.},
     {0.0403043134556694, -0.8503412481338115, 0.10180411526881591, 0.09741652322635884},
     {0.09142908335412901, 0.099328787440958, -0.9388687213832358, 0.08692534588008813},
     {0.09360045338630754, 0., 0., -0.6968059620796929}}
    >>> Print[D[[2]]];
    {{0.041538067993089386, 0., 0.1033949305178276, 0.},
     {0.06875974277651152, 0.05194063767650804, 0.05750116494864467, 0.08779963324540807},
     {0.07611782687397202, 0.01309224290831622, 0.08489612984198497, 0.05478340095090486},
     {0.09128465456604319, 0.09574581485599448, 0.04801134956922591, 0.04165981570979949}}
    >>> Print[D[[3]]];
    {{0., 0.08535256171504893, 0.03936086595379699, 0.07601787407326564},
     {0.01443265759897303, 0.0027909493493562094, 0.02537752324549175, 0.02468042825348911},
     {0.0966028711881042, 0.06319026894267478, 0.027221674783422144, 0.02339923350805588},
     {0.09094192739723253, 0., 0.07194607634800916, 0.06660422631255408}}
    >>> Print[D[[4]]];
    {{0.086710678746645, 0.0397910354346189, 0.0906650431147752, 0.04169115804258864},
     {0.07583458613247174, 0.09095401907861021, 0.0630104885907344, 0.04773446528676858},
     {0.09398165560030655, 0.07890877622332822, 0.04280940153209228, 0.006182022354898479},
     {0., 0.011820825361649225, 0.023914857289353733, 0.0612759612835236}}
    >>> m = MarginalMomentsFromMMAP[D,1][[1]];
    >>> Print[m];
    1.62

    For Python/Numpy:

    >>> D = RandomMMAP(4,3,1.62,10)
    >>> print(D[0])
    [[-0.84703  0.11642  0.00111  0.0145 ]
     [ 0.08776 -1.07891  0.10942  0.08784]
     [ 0.04016  0.11208 -0.66365  0.07847]
     [ 0.01966  0.       0.09274 -0.70475]]
    >>> print(D[1])
    [[ 0.08954  0.09996  0.07414  0.02508]
     [ 0.11029  0.0571   0.07134  0.     ]
     [ 0.05339  0.11256  0.02107  0.07767]
     [ 0.10814  0.       0.0074   0.10089]]
    >>> print(D[2])
    [[ 0.       0.       0.09729  0.03095]
     [ 0.08346  0.01083  0.11066  0.10311]
     [ 0.01576  0.       0.       0.03774]
     [ 0.08113  0.05506  0.       0.11874]]
    >>> print(D[3])
    [[ 0.11136  0.0423   0.09672  0.04766]
     [ 0.1102   0.05931  0.       0.07758]
     [ 0.01232  0.02012  0.04428  0.03803]
     [ 0.0594   0.0318   0.02979  0.     ]]
    >>> m = MarginalMomentsFromMMAP(D,1)[0]
    >>> print(m)
    1.62

