TestPHPackage[]:=
Module[{Cm, mom3upper, coo, err2, mp, a, n, phmoms, flag, co, x, mom2, y, B, pdf, ma, b, A, oo, mb, mo, mean, cdf, moms, err1, cv2, memoms, mom3lower},
	Print["---BuTools: PH package test file---"//OutputForm];
	Print["Enable the verbose messages with the BuToolsVerbose flag"//OutputForm];
	BuTools`Verbose = True;
	Print["Enable input parameter checking with the BuToolsCheckInput flag"//OutputForm];
	BuTools`CheckInput = True;
	On[Assert];
	Print["========================================"];
	?"MomentsFromME";
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	a = {0.2, 0.3, 0.5};
	Print["a = "//OutputForm];
	Print[a];
	A = {{-1, 0, 0},{0, -3, 2},{0, -2, -3}};
	Print["A = "//OutputForm];
	Print[A];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["moms = MomentsFromME[a,A]:"//OutputForm];
	moms = MomentsFromME[a,A];
	Print["moms = "//OutputForm];
	Print[moms];
	Assert[CheckMoments[moms]==True  , "The function returned invalid moments!"];
	Print["moms = MomentsFromME[a,A,9]:"//OutputForm];
	moms = MomentsFromME[a,A,9];
	Print["moms = "//OutputForm];
	Print[moms];
	Assert[CheckMoments[moms]==True  , "The function returned invalid moments!"];
	Print["========================================"];
	?"MomentsFromPH";
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	a = {0.1, 0.9, 0};
	Print["a = "//OutputForm];
	Print[a];
	A = {{-6.2, 2, 0},{2, -9, 1},{1, 0, -3}};
	Print["A = "//OutputForm];
	Print[A];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["moms = MomentsFromPH[a,A,5]:"//OutputForm];
	moms = MomentsFromPH[a,A,5];
	Print["moms = "//OutputForm];
	Print[moms];
	Assert[CheckMoments[moms]==True , "The function returned invalid moments!"];
	Print["========================================"];
	?"CdfFromME";
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	a = {0.2, 0.3, 0.5};
	Print["a = "//OutputForm];
	Print[a];
	A = {{-1, 0, 0},{0, -3, 2},{0, -2, -3}};
	Print["A = "//OutputForm];
	Print[A];
	x = Range[0,5,0.01];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["cdf = CdfFromME[a,A,x]:"//OutputForm];
	cdf = CdfFromME[a,A,x];
	Assert[AllTrue[Differences[cdf],Positive] , "The cdf is not increasing monotonously!"];
	Assert[Abs[Total[1-cdf]*0.01 - MomentsFromME[a,A,1][[1]]]<0.01 , "The mean computed from the cdf does not match the theoretical result!"];
	Print["========================================"];
	?"CdfFromPH";
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	a = {0.1, 0.9, 0};
	Print["a = "//OutputForm];
	Print[a];
	A = {{-6.2, 2, 0},{2, -9, 1},{1, 0, -3}};
	Print["A = "//OutputForm];
	Print[A];
	x = Range[0,3,0.002];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["cdf = CdfFromPH[a,A,x]:"//OutputForm];
	cdf = CdfFromPH[a,A,x];
	Assert[AllTrue[Differences[cdf],Positive] , "The cdf is not increasing monotonously!"];
	Assert[Abs[Total[1-cdf]*0.002 - MomentsFromME[a,A,1][[1]]]<0.002 , "The mean computed from the cdf does not match the theoretical result!"];
	Print["========================================"];
	?"PdfFromME";
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	a = {0.2, 0.3, 0.5};
	Print["a = "//OutputForm];
	Print[a];
	A = {{-1, 0, 0},{0, -3, 2},{0, -2, -3}};
	Print["A = "//OutputForm];
	Print[A];
	x = Range[0,5,0.01];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["pdf = PdfFromME[a,A,x]:"//OutputForm];
	pdf = PdfFromME[a,A,x];
	Assert[AllTrue[pdf,NonNegative] , "The pdf is negative!"];
	Assert[Abs[pdf.x*0.01 - MomentsFromME[a,A,1][[1]]]<0.01 , "The mean computed from the pdf does not match the theoretical result!"];
	Print["========================================"];
	?"PdfFromPH";
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	a = {0.1, 0.9, 0};
	Print["a = "//OutputForm];
	Print[a];
	A = {{-6.2, 2, 0},{2, -9, 1},{1, 0, -3}};
	Print["A = "//OutputForm];
	Print[A];
	x = Range[0,3,0.002];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["pdf = PdfFromPH[a,A,x]:"//OutputForm];
	pdf = PdfFromPH[a,A,x];
	Assert[AllTrue[pdf,NonNegative] , "The pdf is negative!"];
	Assert[Abs[pdf.x*0.002 - MomentsFromPH[a,A,1][[1]]]<0.002 , "The mean computed from the pdf does not match the theoretical result!"];
	Print["========================================"];
	?"IntervalPdfFromPH";
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	a = {0.1, 0.9, 0};
	Print["a = "//OutputForm];
	Print[a];
	A = {{-6.2, 2, 0},{2, -9, 1},{1, 0, -3}};
	Print["A = "//OutputForm];
	Print[A];
	x = Range[0,3,0.002];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["{x,y} = IntervalPdfFromPH[a,A,x]:"//OutputForm];
	{x,y} = IntervalPdfFromPH[a,A,x];
	Assert[AllTrue[y,NonNegative] , "The interval pdf is negative!"];
	Assert[Abs[y.x*0.002 - MomentsFromPH[a,A,1][[1]]]<0.002 , "The mean computed from the interval pdf does not match the theoretical result!"];
	Print["========================================"];
	?"RandomPH";
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["{a,A} = RandomPH[3,8,4]:"//OutputForm];
	{a,A} = RandomPH[3,8,4];
	Print["a = "//OutputForm];
	Print[a];
	Print["A = "//OutputForm];
	Print[A];
	Assert[CheckPHRepresentation[a,A] , "RandomPH failed to return a valid PH representation!"];
	Assert[Max[Abs[MomentsFromPH[a,A,1][[1]]-8]]<10^-14 , "RandomPH failed to match the given mean value!"];
	Print["========================================"];
	?"CheckMERepresentation";
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	a = {-0.2, 0.2};
	Print["a = "//OutputForm];
	Print[a];
	A = {{1, -1},{1, -2}};
	Print["A = "//OutputForm];
	Print[A];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["flag = CheckMERepresentation[a,A]:"//OutputForm];
	flag = CheckMERepresentation[a,A];
	Print["flag = "//OutputForm];
	Print[flag];
	Assert[flag==False , "CheckMERepresentation did not detect that the initial vector is invalid!"];
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	a = {-0.2, 0.4, 0.8};
	Print["a = "//OutputForm];
	Print[a];
	A = {{-2, 0, 3},{0, -1, 1},{0, -1, -1}};
	Print["A = "//OutputForm];
	Print[A];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["flag = CheckMERepresentation[a,A]:"//OutputForm];
	flag = CheckMERepresentation[a,A];
	Print["flag = "//OutputForm];
	Print[flag];
	Assert[flag==False , "CheckMERepresentation did not detect that the dominant eigenvalue is invalid!"];
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	a = {0.2, 0.3, 0.5};
	Print["a = "//OutputForm];
	Print[a];
	A = {{-1, 0, 0},{0, -3, 2},{0, -2, -3}};
	Print["A = "//OutputForm];
	Print[A];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["flag = CheckMERepresentation[a,A]:"//OutputForm];
	flag = CheckMERepresentation[a,A];
	Print["flag = "//OutputForm];
	Print[flag];
	Assert[flag==True , "CheckMERepresentation did not recognize that the given ME representation is valid!"];
	Print["========================================"];
	?"CheckPHRepresentation";
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	a = {0.2};
	Print["a = "//OutputForm];
	Print[a];
	A = {{-1, 1},{1, -2}};
	Print["A = "//OutputForm];
	Print[A];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["flag = CheckPHRepresentation[a,A]:"//OutputForm];
	flag = CheckPHRepresentation[a,A];
	Print["flag = "//OutputForm];
	Print[flag];
	Assert[flag==False , "CheckPHRepresentation did not recognize the wrong input dimensions!"];
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	a = {0.2, 0.7};
	Print["a = "//OutputForm];
	Print[a];
	A = {{-1, 1},{1, -2}};
	Print["A = "//OutputForm];
	Print[A];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["flag = CheckPHRepresentation[a,A]:"//OutputForm];
	flag = CheckPHRepresentation[a,A];
	Print["flag = "//OutputForm];
	Print[flag];
	Assert[flag==True , "CheckPHRepresentation did not recognize that the given PH representation is valid!"];
	Print["========================================"];
	?"CheckMEPositiveDensity";
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	a = {0.2, 0.3, 0.5};
	Print["a = "//OutputForm];
	Print[a];
	A = {{-1, 0, 0},{0, -3, 2},{0, -2, -3}};
	Print["A = "//OutputForm];
	Print[A];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["flag = CheckMEPositiveDensity[a,A]:"//OutputForm];
	flag = CheckMEPositiveDensity[a,A];
	Print["flag = "//OutputForm];
	Print[flag];
	Assert[flag==True , "CheckMEPositiveDensity did not recognize that the given ME distribution has positive density!"];
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	a = {0.2, 0.3, 0.5};
	Print["a = "//OutputForm];
	Print[a];
	A = {{-1, 0, 0},{0, -3, 2.9},{0, -2.9, -3}};
	Print["A = "//OutputForm];
	Print[A];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["flag = CheckMEPositiveDensity[a,A]:"//OutputForm];
	flag = CheckMEPositiveDensity[a,A];
	Print["flag = "//OutputForm];
	Print[flag];
	Assert[flag==False , "CheckMEPositiveDensity did not recognize that the given ME distribution does not have positive density!"];
	Print["========================================"];
	?"APHFrom3Moments";
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	moms = {10.0, 125.0, 8400.0};
	Print["moms = "//OutputForm];
	Print[moms];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["{a,A} = APHFrom3Moments[moms]:"//OutputForm];
	{a,A} = APHFrom3Moments[moms];
	Print["a = "//OutputForm];
	Print[a];
	Print["A = "//OutputForm];
	Print[A];
	phmoms = MomentsFromPH[a,A,3];
	Print["phmoms = "//OutputForm];
	Print[phmoms];
	Assert[Norm[(phmoms-moms)/moms]<10^-12 , "APHFrom3Moments failed to match the given moments!"];
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	moms = {10.0, 525.0, 31400.0};
	Print["moms = "//OutputForm];
	Print[moms];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["{a,A} = APHFrom3Moments[moms]:"//OutputForm];
	{a,A} = APHFrom3Moments[moms];
	Print["a = "//OutputForm];
	Print[a];
	Print["A = "//OutputForm];
	Print[A];
	phmoms = MomentsFromPH[a,A,3];
	Print["phmoms = "//OutputForm];
	Print[phmoms];
	Assert[Norm[(phmoms-moms)/moms]<10^-12 , "APHFrom3Moments failed to match the given moments!"];
	Print["========================================"];
	?"PH2From3Moments";
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	moms = {10.0, 160.0, 3500.0};
	Print["moms = "//OutputForm];
	Print[moms];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["{a,A} = PH2From3Moments[moms]:"//OutputForm];
	{a,A} = PH2From3Moments[moms];
	Print["a = "//OutputForm];
	Print[a];
	Print["A = "//OutputForm];
	Print[A];
	phmoms = MomentsFromPH[a,A,3];
	Print["phmoms = "//OutputForm];
	Print[phmoms];
	Assert[Norm[(phmoms-moms)/moms]<10^-12 , "PH2From3Moments failed to match the given moments!"];
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	moms = {10.0, 260.0, 13500.0};
	Print["moms = "//OutputForm];
	Print[moms];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["{a,A} = PH2From3Moments[moms]:"//OutputForm];
	{a,A} = PH2From3Moments[moms];
	Print["a = "//OutputForm];
	Print[a];
	Print["A = "//OutputForm];
	Print[A];
	phmoms = MomentsFromPH[a,A,3];
	Print["phmoms = "//OutputForm];
	Print[phmoms];
	Assert[Norm[(phmoms-moms)/moms]<10^-12 , "PH2From3Moments failed to match the given moments!"];
	Print["========================================"];
	?"PH3From5Moments";
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	a = {0.1, 0.9, 0};
	A = {{-6.2, 2, 0},{2, -9, 1},{1, 0, -3}};
	moms = MomentsFromPH[a,A];
	Print["moms = "//OutputForm];
	Print[moms];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["{a,A} = PH3From5Moments[moms]:"//OutputForm];
	{a,A} = PH3From5Moments[moms];
	Print["a = "//OutputForm];
	Print[a];
	Print["A = "//OutputForm];
	Print[A];
	phmoms = MomentsFromME[a,A,5];
	Print["phmoms = "//OutputForm];
	Print[phmoms];
	Assert[Norm[(phmoms-moms)/moms]<10^-12 , "PH3From5Moments failed to match the given moments!"];
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	a = {0.2, 0.3, 0.5};
	A = {{-1, 0, 0},{0, -3, 0.5},{0, -0.5, -3}};
	moms = MomentsFromME[a,A];
	Print["moms = "//OutputForm];
	Print[moms];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["{a,A} = PH3From5Moments[moms]:"//OutputForm];
	{a,A} = PH3From5Moments[moms];
	Print["a = "//OutputForm];
	Print[a];
	Print["A = "//OutputForm];
	Print[A];
	phmoms = MomentsFromME[a,A,5];
	Print["phmoms = "//OutputForm];
	Print[phmoms];
	Assert[Norm[(phmoms-moms)/moms]<10^-12 , "PH3From5Moments failed to match the given moments!"];
	Print["========================================"];
	?"MEFromMoments";
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	a = {0.1, 0.9, 0};
	A = {{-6.2, 2, 0},{2, -9, 1},{1, 0, -3}};
	moms = MomentsFromPH[a,A,5];
	Print["moms = "//OutputForm];
	Print[moms];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["{a,A} = MEFromMoments[moms]:"//OutputForm];
	{a,A} = MEFromMoments[moms];
	Print["a = "//OutputForm];
	Print[a];
	Print["A = "//OutputForm];
	Print[A];
	memoms = MomentsFromME[a,A,5];
	Print["memoms = "//OutputForm];
	Print[memoms];
	Assert[Norm[(memoms-moms)/moms]<10^-12 , "MEFromMoments failed to match the given moments!"];
	Print["========================================"];
	?"APH2ndMomentLowerBound";
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	mean = 1.9;
	Print["mean = "//OutputForm];
	Print[mean];
	n = 4;
	Print["n = "//OutputForm];
	Print[n];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["mom2 = APH2ndMomentLowerBound[mean,n]:"//OutputForm];
	mom2 = APH2ndMomentLowerBound[mean,n];
	Print["mom2 = "//OutputForm];
	Print[mom2];
	Print["cv2 = mom2/mean^2-1:"//OutputForm];
	cv2 = mom2/mean^2-1;
	Print["1/cv2:"//OutputForm];
	Print[1/cv2];
	Assert[Abs[cv2-1/n]<10^-14 , "APH2ndMomentLowerBound did not give the expected result!"];
	Print["========================================"];
	?"APH3rdMomentLowerBound";
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	mean = 1.9;
	Print["mean = "//OutputForm];
	Print[mean];
	mom2 = 5;
	Print["mom2 = "//OutputForm];
	Print[mom2];
	n = 3;
	Print["n = "//OutputForm];
	Print[n];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["mom3lower = APH3rdMomentLowerBound[mean,mom2,n]:"//OutputForm];
	mom3lower = APH3rdMomentLowerBound[mean,mom2,n];
	Print["mom3lower = "//OutputForm];
	Print[mom3lower];
	Print["mom3upper = APH3rdMomentUpperBound[mean,mom2,n]:"//OutputForm];
	mom3upper = APH3rdMomentUpperBound[mean,mom2,n];
	Print["mom3upper = "//OutputForm];
	Print[mom3upper];
	Assert[mom3upper>mom3lower , "Lower bound is larger than the upper bound!"];
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	mean = 1.9;
	Print["mean = "//OutputForm];
	Print[mean];
	mom2 = 5;
	Print["mom2 = "//OutputForm];
	Print[mom2];
	n = 4;
	Print["n = "//OutputForm];
	Print[n];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["mom3lower = APH3rdMomentLowerBound[mean,mom2,n]:"//OutputForm];
	mom3lower = APH3rdMomentLowerBound[mean,mom2,n];
	Print["mom3lower = "//OutputForm];
	Print[mom3lower];
	Print["mom3upper = APH3rdMomentUpperBound[mean,mom2,n]:"//OutputForm];
	mom3upper = APH3rdMomentUpperBound[mean,mom2,n];
	Print["mom3upper = "//OutputForm];
	Print[mom3upper];
	Assert[mom3upper>mom3lower , "Lower bound is larger than the upper bound!"];
	Assert[mom3upper==Infinity , "Upper bound must be infinity with 4 phases!"];
	Print["========================================"];
	?"APH3rdMomentUpperBound";
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	mean = 1.9;
	Print["mean = "//OutputForm];
	Print[mean];
	mom2 = 5;
	Print["mom2 = "//OutputForm];
	Print[mom2];
	n = 3;
	Print["n = "//OutputForm];
	Print[n];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["mom3lower = APH3rdMomentLowerBound[mean,mom2,n]:"//OutputForm];
	mom3lower = APH3rdMomentLowerBound[mean,mom2,n];
	Print["mom3lower = "//OutputForm];
	Print[mom3lower];
	Print["mom3upper = APH3rdMomentUpperBound[mean,mom2,n]:"//OutputForm];
	mom3upper = APH3rdMomentUpperBound[mean,mom2,n];
	Print["mom3upper = "//OutputForm];
	Print[mom3upper];
	Assert[mom3upper>mom3lower , "Lower bound is larger than the upper bound!"];
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	mean = 1.9;
	Print["mean = "//OutputForm];
	Print[mean];
	mom2 = 5;
	Print["mom2 = "//OutputForm];
	Print[mom2];
	n = 4;
	Print["n = "//OutputForm];
	Print[n];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["mom3lower = APH3rdMomentLowerBound[mean,mom2,n]:"//OutputForm];
	mom3lower = APH3rdMomentLowerBound[mean,mom2,n];
	Print["mom3lower = "//OutputForm];
	Print[mom3lower];
	Print["mom3upper = APH3rdMomentUpperBound[mean,mom2,n]:"//OutputForm];
	mom3upper = APH3rdMomentUpperBound[mean,mom2,n];
	Print["mom3upper = "//OutputForm];
	Print[mom3upper];
	Assert[mom3upper>mom3lower , "Lower bound is larger than the upper bound!"];
	Assert[mom3upper==Infinity , "Upper bound must be infinity with 4 phases!"];
	Print["========================================"];
	?"CanonicalFromPH2";
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	a = {0.12, 0.88};
	Print["a = "//OutputForm];
	Print[a];
	A = {{-1.28, 0},{3.94, -3.94}};
	Print["A = "//OutputForm];
	Print[A];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["{b,B} = CanonicalFromPH2[a,A]:"//OutputForm];
	{b,B} = CanonicalFromPH2[a,A];
	Print["b = "//OutputForm];
	Print[b];
	Print["B = "//OutputForm];
	Print[B];
	Cm = SimilarityMatrix[A,B];
	err1 = Norm[A.Cm-Cm.B];
	err2 = Norm[a.Cm-b];
	Print["Transformation errors:"//OutputForm];
	Print[Max[err1,err2]];
	Assert[err1<10^-12 && err2<10^-12 , "Transformation to canonical PH(2) failed!"];
	Print["========================================"];
	?"CanonicalFromPH3";
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	a = {0.1, 0.9, 0};
	Print["a = "//OutputForm];
	Print[a];
	A = {{-6.2, 2, 0},{2, -9, 1},{1, 0, -3}};
	Print["A = "//OutputForm];
	Print[A];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["{b,B} = CanonicalFromPH3[a,A]:"//OutputForm];
	{b,B} = CanonicalFromPH3[a,A];
	Print["b = "//OutputForm];
	Print[b];
	Print["B = "//OutputForm];
	Print[B];
	Cm = SimilarityMatrix[A,B];
	err1 = Norm[A.Cm-Cm.B];
	err2 = Norm[a.Cm-b];
	Print["Transformation errors:"//OutputForm];
	Print[Max[err1,err2]];
	Assert[err1<10^-12 && err2<10^-12 , "Transformation to canonical PH(3) failed!"];
	Print["========================================"];
	?"AcyclicPHFromME";
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	a = {-0.4, 1.4, 0.};
	Print["a = "//OutputForm];
	Print[a];
	A = {{-4., 1., 1.},{0., -2., 1.},{1., 0., -8.}};
	Print["A = "//OutputForm];
	Print[A];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["{b,B} = AcyclicPHFromME[a,A]:"//OutputForm];
	{b,B} = AcyclicPHFromME[a,A];
	Print["b = "//OutputForm];
	Print[b];
	Print["B = "//OutputForm];
	Print[B];
	Print["ma = MomentsFromME[a,A,5]:"//OutputForm];
	ma = MomentsFromME[a,A,5];
	Print["ma = "//OutputForm];
	Print[ma];
	Print["mb = MomentsFromME[b,B,5]:"//OutputForm];
	mb = MomentsFromME[b,B,5];
	Print["mb = "//OutputForm];
	Print[mb];
	Assert[Norm[(ma-mb)/ma]<10^-7 , "Transformation to acyclic representation failed!"];
	Print["========================================"];
	?"MonocyclicPHFromME";
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	a = {0.2, 0.3, 0.5};
	Print["a = "//OutputForm];
	Print[a];
	A = {{-1., 0., 0.},{0., -3., 2.},{0., -2., -3.}};
	Print["A = "//OutputForm];
	Print[A];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["{b,B} = MonocyclicPHFromME[a,A]:"//OutputForm];
	{b,B} = MonocyclicPHFromME[a,A];
	Print["b = "//OutputForm];
	Print[b];
	Print["B = "//OutputForm];
	Print[B];
	Print["ma = MomentsFromME[a,A,5]:"//OutputForm];
	ma = MomentsFromME[a,A,5];
	Print["ma = "//OutputForm];
	Print[ma];
	Print["mb = MomentsFromME[b,B,5]:"//OutputForm];
	mb = MomentsFromME[b,B,5];
	Print["mb = "//OutputForm];
	Print[mb];
	Assert[Norm[(ma-mb)/ma]<10^-7 , "Transformation to monocyclic representation failed!"];
	Print["========================================"];
	?"PHFromME";
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	a = {-0.4, 1.4};
	Print["a = "//OutputForm];
	Print[a];
	A = {{-3.8, 2},{2, -9}};
	Print["A = "//OutputForm];
	Print[A];
	Print["flag = CheckMERepresentation[a,A]:"//OutputForm];
	flag = CheckMERepresentation[a,A];
	Print["flag = "//OutputForm];
	Print[flag];
	Print["flag = CheckPHRepresentation[a,A]:"//OutputForm];
	flag = CheckPHRepresentation[a,A];
	Print["flag = "//OutputForm];
	Print[flag];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["{b,B} = PHFromME[a,A]:"//OutputForm];
	{b,B} = PHFromME[a,A];
	Print["b = "//OutputForm];
	Print[b];
	Print["B = "//OutputForm];
	Print[B];
	Print["flag = CheckPHRepresentation[b,B]:"//OutputForm];
	flag = CheckPHRepresentation[b,B];
	Print["flag = "//OutputForm];
	Print[flag];
	Cm = SimilarityMatrix[A,B];
	err1 = Norm[A.Cm-Cm.B];
	err2 = Norm[a.Cm-b];
	Print["Transformation error:"//OutputForm];
	Print[Max[err1,err2]];
	Assert[flag && err1<10^-12 && err2<10^-12 , "Transformation to PH failed!"];
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	a = {-0.5, 1.5};
	Print["a = "//OutputForm];
	Print[a];
	A = {{-3.8, 2},{2, -9}};
	Print["A = "//OutputForm];
	Print[A];
	Print["flag = CheckMERepresentation[a,A]:"//OutputForm];
	flag = CheckMERepresentation[a,A];
	Print["flag = "//OutputForm];
	Print[flag];
	Print["flag = CheckPHRepresentation[a,A]:"//OutputForm];
	flag = CheckPHRepresentation[a,A];
	Print["flag = "//OutputForm];
	Print[flag];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["{b,B} = PHFromME[a,A]:"//OutputForm];
	{b,B} = PHFromME[a,A];
	Print["b = "//OutputForm];
	Print[b];
	Print["B = "//OutputForm];
	Print[B];
	Print["flag = CheckPHRepresentation[b,B]:"//OutputForm];
	flag = CheckPHRepresentation[b,B];
	Print["flag = "//OutputForm];
	Print[flag];
	Cm = SimilarityMatrix[A,B];
	err1 = Norm[A.Cm-Cm.B];
	err2 = Norm[a.Cm-b];
	Print["Transformation error:"//OutputForm];
	Print[Max[err1,err2]];
	Assert[flag && err1<10^-12 && err2<10^-12 , "Transformation to PH failed!"];
	Print["========================================"];
	?"MEOrder";
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	a = {1./6, 1./6, 1./6, 1./6, 1./6, 1./6};
	Print["a = "//OutputForm];
	Print[a];
	A = {{-1., 0., 0., 0., 0., 0.},{0.5, -2., 1., 0., 0., 0.},{1., 0., -3., 1., 0., 0.},{1., 0., 1., -4., 1., 0.},{4., 0., 0., 0., -5., 0.},{5., 0., 0., 0., 0., -6.}};
	Print["A = "//OutputForm];
	Print[A];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["co = MEOrder[a,A,\"cont\"]:"//OutputForm];
	co = MEOrder[a,A,"cont"];
	Print["co = "//OutputForm];
	Print[co];
	Print["oo = MEOrder[a,A,\"obs\"]:"//OutputForm];
	oo = MEOrder[a,A,"obs"];
	Print["oo = "//OutputForm];
	Print[oo];
	Print["coo = MEOrder[a,A,\"obscont\"]:"//OutputForm];
	coo = MEOrder[a,A,"obscont"];
	Print["coo = "//OutputForm];
	Print[coo];
	Print["mo = MEOrder[a,A,\"moment\"]:"//OutputForm];
	mo = MEOrder[a,A,"moment"];
	Print["mo = "//OutputForm];
	Print[mo];
	Assert[co==2 , "Wrong controllability order returned!"];
	Assert[oo==6 , "Wrong observability order returned!"];
	Assert[coo==2 , "The minimum of the controllability and observability order is wrong!"];
	Assert[mo==2 , "Wrong moment order returned!"];
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	a = {2./3, 1./3};
	Print["a = "//OutputForm];
	Print[a];
	A = {{-1., 1.},{0., -3.}};
	Print["A = "//OutputForm];
	Print[A];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["co = MEOrder[a,A,\"cont\"]:"//OutputForm];
	co = MEOrder[a,A,"cont"];
	Print["co = "//OutputForm];
	Print[co];
	Print["oo = MEOrder[a,A,\"obs\"]:"//OutputForm];
	oo = MEOrder[a,A,"obs"];
	Print["oo = "//OutputForm];
	Print[oo];
	Print["coo = MEOrder[a,A,\"obscont\"]:"//OutputForm];
	coo = MEOrder[a,A,"obscont"];
	Print["coo = "//OutputForm];
	Print[coo];
	Print["mo = MEOrder[a,A,\"moment\"]:"//OutputForm];
	mo = MEOrder[a,A,"moment"];
	Print["mo = "//OutputForm];
	Print[mo];
	Assert[co==2 , "Wrong controllability order returned!"];
	Assert[oo==1 , "Wrong observability order returned!"];
	Assert[coo==1 , "The minimum of the controllability and observability order is wrong!"];
	Assert[mo==1 , "Wrong moment order returned!"];
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	b = {0.2, 0.3, 0.5};
	B = {{-1., 0., 0.},{0., -3., 1.},{0., -1., -3.}};
	Print["{a,A} = MonocyclicPHFromME[b,B]:"//OutputForm];
	{a,A} = MonocyclicPHFromME[b,B];
	Print["a = "//OutputForm];
	Print[a];
	Print["A = "//OutputForm];
	Print[A];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["co = MEOrder[a,A,\"cont\"]:"//OutputForm];
	co = MEOrder[a,A,"cont"];
	Print["co = "//OutputForm];
	Print[co];
	Print["oo = MEOrder[a,A,\"obs\"]:"//OutputForm];
	oo = MEOrder[a,A,"obs"];
	Print["oo = "//OutputForm];
	Print[oo];
	Print["coo = MEOrder[a,A,\"obscont\"]:"//OutputForm];
	coo = MEOrder[a,A,"obscont"];
	Print["coo = "//OutputForm];
	Print[coo];
	Print["mo = MEOrder[a,A,\"moment\"]:"//OutputForm];
	mo = MEOrder[a,A,"moment"];
	Print["mo = "//OutputForm];
	Print[mo];
	Assert[co==9 , "Wrong controllability order returned!"];
	Assert[oo==3 , "Wrong observability order returned!"];
	Assert[coo==3 , "The minimum of the controllability and observability order is wrong!"];
	Assert[mo==3 , "Wrong moment order returned!"];
	Print["========================================"];
	?"MEOrderFromMoments";
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	a = {0.1, 0.9, 0};
	Print["a = "//OutputForm];
	Print[a];
	A = {{-6.2, 2., 0.},{2., -9., 1.},{1., 0., -3.}};
	Print["A = "//OutputForm];
	Print[A];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["moms = MomentsFromME[a,A]:"//OutputForm];
	moms = MomentsFromME[a,A];
	Print["moms = "//OutputForm];
	Print[moms];
	Print["mo = MEOrderFromMoments[moms]:"//OutputForm];
	mo = MEOrderFromMoments[moms];
	Print["mo = "//OutputForm];
	Print[mo];
	Assert[mo==3 , "Wrong moment order returned!"];
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	b = {0.2, 0.3, 0.5};
	Print["b = "//OutputForm];
	Print[b];
	B = {{-1., 0., 0.},{0., -3., 2.},{0., -2., -3.}};
	Print["B = "//OutputForm];
	Print[B];
	Print["{a,A} = MonocyclicPHFromME[b,B]:"//OutputForm];
	{a,A} = MonocyclicPHFromME[b,B];
	Print["moms = MomentsFromME[a,A]:"//OutputForm];
	moms = MomentsFromME[a,A];
	Print["moms = "//OutputForm];
	Print[moms];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["mo = MEOrderFromMoments[moms]:"//OutputForm];
	mo = MEOrderFromMoments[moms];
	Print["mo = "//OutputForm];
	Print[mo];
	Assert[mo==3 , "Wrong moment order returned!"];
	Print["========================================"];
	?"MinimalRepFromME";
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	a = {1./6, 1./6, 1./6, 1./6, 1./6, 1./6};
	Print["a = "//OutputForm];
	Print[a];
	A = {{-1., 0., 0., 0., 0., 0.},{0.5, -2., 1., 0., 0., 0.},{1., 0., -3., 1., 0., 0.},{1., 0., 1., -4., 1., 0.},{4., 0., 0., 0., -5., 0.},{5., 0., 0., 0., 0., -6.}};
	Print["A = "//OutputForm];
	Print[A];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["{b,B} = MinimalRepFromME[a,A,\"cont\"]:"//OutputForm];
	{b,B} = MinimalRepFromME[a,A,"cont"];
	Print["b = "//OutputForm];
	Print[b];
	Print["B = "//OutputForm];
	Print[B];
	Assert[Length[b]==2 , "Non-minimal representation returned based on controllability!"];
	Print["{b,B} = MinimalRepFromME[a,A,\"obs\"]:"//OutputForm];
	{b,B} = MinimalRepFromME[a,A,"obs"];
	Print["b = "//OutputForm];
	Print[b];
	Print["B = "//OutputForm];
	Print[B];
	Assert[Length[b]==6 , "Non-minimal representation returned based on observability!"];
	Print["{b,B} = MinimalRepFromME[a,A,\"obscont\"]:"//OutputForm];
	{b,B} = MinimalRepFromME[a,A,"obscont"];
	Print["b = "//OutputForm];
	Print[b];
	Print["B = "//OutputForm];
	Print[B];
	Assert[Length[b]==2 , "Non-minimal representation returned based on observability and controllability!"];
	Print["{b,B} = MinimalRepFromME[a,A,\"moment\"]:"//OutputForm];
	{b,B} = MinimalRepFromME[a,A,"moment"];
	Print["b = "//OutputForm];
	Print[b];
	Print["B = "//OutputForm];
	Print[B];
	Assert[Length[b]==2 , "Non-minimal representation returned based on the moments!"];
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	a = {2./3, 1./3};
	Print["a = "//OutputForm];
	Print[a];
	A = {{-1., 1.},{0., -3.}};
	Print["A = "//OutputForm];
	Print[A];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["{b,B} = MinimalRepFromME[a,A,\"cont\"]:"//OutputForm];
	{b,B} = MinimalRepFromME[a,A,"cont"];
	Print["b = "//OutputForm];
	Print[b];
	Print["B = "//OutputForm];
	Print[B];
	Assert[Length[b]==2 , "Non-minimal representation returned based on controllability!"];
	Print["{b,B} = MinimalRepFromME[a,A,\"obs\"]:"//OutputForm];
	{b,B} = MinimalRepFromME[a,A,"obs"];
	Print["b = "//OutputForm];
	Print[b];
	Print["B = "//OutputForm];
	Print[B];
	Assert[Length[b]==1 , "Non-minimal representation returned based on observability!"];
	Print["{b,B} = MinimalRepFromME[a,A,\"obscont\"]:"//OutputForm];
	{b,B} = MinimalRepFromME[a,A,"obscont"];
	Print["b = "//OutputForm];
	Print[b];
	Print["B = "//OutputForm];
	Print[B];
	Assert[Length[b]==1 , "Non-minimal representation returned based on observability and controllability!"];
	Print["{b,B} = MinimalRepFromME[a,A,\"moment\"]:"//OutputForm];
	{b,B} = MinimalRepFromME[a,A,"moment"];
	Print["b = "//OutputForm];
	Print[b];
	Print["B = "//OutputForm];
	Print[B];
	Assert[Length[b]==1 , "Non-minimal representation returned based on the moments!"];
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	b = {0.2, 0.3, 0.5};
	B = {{-1., 0., 0.},{0., -3., 1.},{0., -1., -3.}};
	Print["{a,A} = MonocyclicPHFromME[b,B]:"//OutputForm];
	{a,A} = MonocyclicPHFromME[b,B];
	Print["a = "//OutputForm];
	Print[a];
	Print["A = "//OutputForm];
	Print[A];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["{b,B} = MinimalRepFromME[a,A,\"cont\"]:"//OutputForm];
	{b,B} = MinimalRepFromME[a,A,"cont"];
	Print["b = "//OutputForm];
	Print[b];
	Print["B = "//OutputForm];
	Print[B];
	Assert[Length[b]==Length[a] , "Non-minimal representation returned based on controllability!"];
	Print["{b,B} = MinimalRepFromME[a,A,\"obs\"]:"//OutputForm];
	{b,B} = MinimalRepFromME[a,A,"obs"];
	Print["b = "//OutputForm];
	Print[b];
	Print["B = "//OutputForm];
	Print[B];
	Cm = SimilarityMatrix[B,A];
	err1 = Norm[B.Cm-Cm.A];
	err2 = Norm[b.Cm-a];
	Print["Transformation error:"//OutputForm];
	Print[Max[err1,err2]];
	Assert[Length[b]==3 && err1+err2<10^-12 , "Non-minimal representation returned based on observability!"];
	Print["{b,B} = MinimalRepFromME[a,A,\"obscont\"]:"//OutputForm];
	{b,B} = MinimalRepFromME[a,A,"obscont"];
	Print["b = "//OutputForm];
	Print[b];
	Print["B = "//OutputForm];
	Print[B];
	Cm = SimilarityMatrix[B,A];
	err1 = Norm[B.Cm-Cm.A];
	err2 = Norm[b.Cm-a];
	Print["Transformation error:"//OutputForm];
	Print[Max[err1,err2]];
	Assert[Length[b]==3 && err1+err2<10^-12 , "Non-minimal representation returned based on observability and controllability!"];
	Print["{b,B} = MinimalRepFromME[a,A,\"moment\"]:"//OutputForm];
	{b,B} = MinimalRepFromME[a,A,"moment"];
	Print["b = "//OutputForm];
	Print[b];
	Print["B = "//OutputForm];
	Print[B];
	Cm = SimilarityMatrix[B,A];
	err1 = Norm[B.Cm-Cm.A];
	err2 = Norm[b.Cm-a];
	Print["Transformation error:"//OutputForm];
	Print[Max[err1,err2]];
	Assert[Length[b]==3 && err1+err2<10^-12 , "Non-minimal representation returned based on the moments!"];
	Print["========================================"];
	?"SamplesFromPH";
	Print["Input:"//OutputForm];
	Print["------"//OutputForm];
	a = {0.1, 0.9, 0};
	Print["a = "//OutputForm];
	Print[a];
	A = {{-6.2, 2, 0},{2, -9, 1},{1, 0, -3}};
	Print["A = "//OutputForm];
	Print[A];
	Print["Test:"//OutputForm];
	Print["-----"//OutputForm];
	Print["x = SamplesFromPH[a,A,1000]:"//OutputForm];
	x = SamplesFromPH[a,A,1000];
	Print["mp = MomentsFromPH[a,A,3]:"//OutputForm];
	mp = MomentsFromPH[a,A,3];
	Print["mp = "//OutputForm];
	Print[mp];

];
